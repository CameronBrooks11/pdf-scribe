e The only sensible choice is to have one chip take the first
third of the addresses (0xA000 to OxBFFF), the the second
take the second third (0xC000 to OxDFFF), and the third
take the final third (0xE000 to OxFFFF).

Writing out the start and end addresses for each chip explic-
itly in hex and binary, we have:

Chip Position Hex Address _—_ Binary Address

 

RAM 1. Start 0x0000 0000 0000 0000 0000
End OxOFFF 0000 1111 1111 1111
RAM 2. Start 0x1000 0001 0000 0000 0000
End Ox1FFF 0001 1111 1111 1111
ROM 1. Start 0xA000 1010 0000 0000 0000
End OxBFFF 1011 1111 1111 1111
ROM 2. Start 0xC000 1100 0000 0000 0000
End OxDFFF 1101 1111 1111 1111
ROM 3. Start 0xE000 1110 0000 0000 0000
End OxFFFF 1111 1111 1111 1111

This makes it fairly clear how to implement the logic for chip
selection — the bits used for chip select are highlighted in
blue. Notice that address bit a; is used for RAM chip select,
but is an internal address bit for ROM chips (as the ROM
chips hold more memory cells).

e Students who excel at simplifying Boolean expressions
will notice there is a choice here: Since most of the mem-
ory space is not mapped, there is multiple solutions for
the chip select logic.

33
