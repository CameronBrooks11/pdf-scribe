Memory Mapping Example

To reinforce what we learned, let’s do a more detailed example!
Consider the following situation, which is based on the old 68HC12 ROM | oxFFFF
microprocessors that used to be used in this class. These micropro-
cessors have only a 16 bit address space, and consequently can map
to 64K of memory cells. In contrast, the ARM®Cortex-A9 which
we presently use in this course have a 32-bit address space and can oxA000
map to 4G of memory cells. As noted previously, we’ll generally Ox9FFF
stick to 64 K address space for “pencil-and-paper” problems be-
cause writing really long address numbers gets tedious.

 

 

Problem: Design a decoding scheme for the given memory map, where
RAM is located between address 0x0000 and Ox1FFF (inclu-
sive), and ROM is located between addresses 0xA000 and
OxFFFF (inclusive). This memory map is shown in Figure 10. o2000
Note that there is plenty of unused memory space that could Raw on0000
be assigned to peripherals.

We have access to as many 4 Kx8 RAM chips and 8 Kx8 ROM
chips as needed.

 

 

 

 

Figure 10: Memory map used in the example.

Solution: First we will calculate how many addresses are needed for the
RAM:

(Ox1FFF — 0x0000) + 1 = 0x2000 = (2')(2")(2")(2*)
_ 9l8 _ (23)(2'°) — 8K.

Here I add +1 to the difference because the difference is in-
clusive of the end points. As we have 4K x8 RAM chips, it is

31
