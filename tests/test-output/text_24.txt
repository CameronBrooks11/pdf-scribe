requires a different read/load opcode for instructions and
data.

e Asmall advantage of a Harvard architecture system is that it
removes the ambiguity on whether a number stored in mem-
ory is an instruction or data (however, data and addresses can
still both be stored in the same memory space).

e A larger advantage of a Harvard architecture system is that
it can fetch instructions and data simultaneously, making it
faster than a von Neumann architecture system.

e A von Neumann architecture system benefits from a simpler
instruction set, and simpler (cheaper) hardware.

Many microcontrollers prioritize low cost and simplicity, and use
von Neumann architecture, but several others do not. ® Most mod-
ern personal computers use a modified Harvard architecture, which
preserves separate buses for instructions and data, but have a fuzzier
definition of “instruction” and “data” — information that is techni-
cally data (i.e. not an opcode) can be stored in instruction space if it
is not modified by the program (for example, the constant 7). But
enough about that.

The relationship between memory and other peripherals — particu-
larly input/output peripherals, is also important.

e Ina I/O mapped microprocessor, I/O peripherals occupy a
separate, special memory space. This again necessitates sepa-
rate read/load opcodes for working with peripherals, as they
are physically connected to the CPU by different hardware
(buses) than the memory.

24

8 Notably, the ARM®Cortex-M3 and -M4 dis-
cussed in the textbook are Harvard architecture.
